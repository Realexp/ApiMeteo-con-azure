// <auto-generated />
using ApiMeteo.DTO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiMeteo.Migrations
{
    [DbContext(typeof(WatherDbContext))]
    [Migration("20250219141855_Init-crz")]
    partial class Initcrz
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiMeteo.Data.City", b =>
                {
                    b.Property<int>("IDCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCity"));

                    b.Property<string>("NameCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazionCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCity");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ApiMeteo.Data.Preference", b =>
                {
                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IDCity")
                        .HasColumnType("int");

                    b.HasKey("EmailUser", "IDCity");

                    b.HasIndex("IDCity");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("ApiMeteo.Data.User", b =>
                {
                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiMeteo.Data.Preference", b =>
                {
                    b.HasOne("ApiMeteo.Data.User", "User")
                        .WithMany("Preference")
                        .HasForeignKey("EmailUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiMeteo.Data.City", "City")
                        .WithMany("Preference")
                        .HasForeignKey("IDCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiMeteo.Data.City", b =>
                {
                    b.Navigation("Preference");
                });

            modelBuilder.Entity("ApiMeteo.Data.User", b =>
                {
                    b.Navigation("Preference");
                });
#pragma warning restore 612, 618
        }
    }
}
